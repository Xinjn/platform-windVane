{"version":3,"sources":["webpack://windvane/./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack://windvane/./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://windvane/./node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","webpack://windvane/./node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js","webpack://windvane/./src/pages/FilmListManage/ProductionDataForm/index.less","webpack://windvane/./src/components/Countdown.tsx","webpack://windvane/./node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","webpack://windvane/./node_modules/@ant-design/icons/es/icons/UploadOutlined.js","webpack://windvane/./src/components/DataTempleteUpload/index.tsx","webpack://windvane/./src/components/DramaContentSearch/index.tsx","webpack://windvane/./src/components/DramaContentSearch/services.ts","webpack://windvane/./src/components/chunkTitle.tsx","webpack://windvane/./src/pages/DataManage/DataControl/services.ts","webpack://windvane/./src/pages/FilmListManage/ProductionDataForm/services.ts","webpack://windvane/./src/pages/FilmListManage/ProductionDataForm/components/ExpertChoose.tsx","webpack://windvane/./src/pages/FilmListManage/ProductionDataForm/components/DragTable.tsx","webpack://windvane/./src/pages/FilmListManage/ProductionDataForm/index.tsx","webpack://windvane/./src/components/DataTempleteUpload/templete.png"],"names":["CloseOutlined","props","ref","AntdIcon","Object","assign","icon","displayName","ExclamationCircleOutlined","module","exports","TimeCountdown","formatExpireTime","date","milliSeconds","moment","isAfter","diff","hours","asHours","days","asDays","Countdown","time","overTimeText","fontSize","style","color","useMemo","Date","getTime","valueOf","value","valueStyle","UploadOutlined","FormItem","divideStyle","display","width","lineHeight","textAlign","timeFormStyle","marginBottom","DataInputControl","noAction","subjectType","form","useState","modalVisible","setModalVisible","uploadFile","setUploadFile","confirmUploadFile","setConfirmUploadFile","submitLoading","setSubmitLoading","showAdjustGrade","setShowAdjustGrade","useGetAdjustComment","dramaId","adjustComment","mutate","showUploadFile","setShowUploadFile","useEffect","length","subjectId","updateTime","modifyHandle","validateFields","then","values","hour","minute","second","rest","sendParams","adjustTime","commentFileUrl","saveAndStartCommentAdjust","res","code","message","successHandle","catch","uploadTemplete","modalOkHandle","setFieldsValue","modalCancelHandle","uploadChange","file","name","status","response","success","label","extra","adjustEndTime","rules","required","step","min","placeholder","max","type","onClick","position","zIndex","href","marginLeft","marginTop","title","visible","onOk","onCancel","showUploadList","accept","action","systemBasePath","data","domain","syncflag","onChange","placement","content","src","templte","resetFields","offset","loading","Option","timeout","fetch","callback","fake","searchDramaContent","onlineStatus","list","clearTimeout","DramaContentSearch","setlist","handleSearch","inputVal","resList","handleChange","JSON","parse","totalItem","showSearch","labelInValue","defaultActiveFirstOption","showArrow","filterOption","onSearch","notFoundContent","d","async","params","request","requestBasePath","method","body","query","sort","key","pagination","pageSize","current","ChunkTitle","enterUrl","className","to","size","getGrowTrendList","requestBody","getPublicScoreTrendList","dealCommentReport","requstParams","appId","APP_ID","sampleAdjustGrade","formValues","createProduction","updateProduction","listId","productionId","operator","uSource","Search","RadioGroup","PAGESIZE","ROLE_TYPE","initSearch","roleType","ExpertChoose","setVisible","searchParams","setSearchParams","expertList","setExpertList","scrollHasMore","setScrollHasMore","useGetUserList","userList","isValidating","selectData","setSelectData","preExpertList","handleOk","handleCancel","hadnleSearch","preParams","nickName","handleInfiniteOnLoad","page","total","pageNum","changeValue","e","id","target","RedoOutlined","shape","border","padding","spinning","height","overflow","initialLoad","pageStart","threshold","loadMore","hasMore","useWindow","item","userId","userAvatar","DraggableBodyRow","index","moveRow","restProps","useRef","useDrop","collect","monitor","getItem","dragIndex","isOver","dropClassName","drop","useDrag","isDragging","drag","cursor","DragSortingTable","setList","deleteFn","columns","dataIndex","render","text","record","components","row","useCallback","hoverIndex","dragRow","update","$splice","DndProvider","backend","HTML5Backend","rowKey","dataSource","onRow","sizeOptions","layout","labelCol","span","wrapperCol","TextArea","authority","getAuthority","ProductionDataForm","Role","setPreData","btnLoading","setBtnLoading","userName","cUserId","expertData","setExpertData","useUserRole","leaveLockRef","leaveConfirm","setLeaveConfirm","show","setShow","productionDetail","setProductionDetail","location","getData","getProductionList","detail","dramas","creatorId","isOnLine","des","FilmStatus","cancleEdit","history","handleSetFormDataInit","coverImageUrl","description","category","platform","showTimeData","showTime","topDeadline","finishTime","imgList","coverImage","uid","url","dataList","zhanghao","preDatas","errorInfo","console","log","handlePublish","visibility","defaultFlag","error","showExpertChoose","changeExpert","handleChangeSearch","pre","listNew","handleSuccess","when","pathname","initialValues","maxLength","rows","valuePropName","UploadFile","isSingle","listType","noStyle","options","FilmTypeOptionsMaps","optionType","disabled","FilmTypeOptions","onConfirm","okText","cancelText","classnames","DataTempleteUpload","withAuthorized"],"mappings":"uJACIA,EAAgB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+TAAmU,KAAQ,QAAS,MAAS,YACxf,U,eCII,EAAgB,SAAuBC,EAAOC,GAChD,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAcC,YAAc,gBAC5B,QAA4B,aAAiB,I,6DCbzCC,EAA4B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,kLAAqL,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uIAA2I,KAAQ,qBAAsB,MAAS,YAC/iB,U,eCII,EAA4B,SAAmCP,EAAOC,GACxE,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAA0BC,YAAc,4BACxC,QAA4B,aAAiB,I,UCb7CE,EAAOC,QAAU,CAAC,cAAgB,UAAU,uBAAyB,UAAU,UAAY,UAAU,wBAA0B,UAAU,aAAe,UAAU,QAAU,UAAU,IAAM,UAAU,SAAW,UAAU,iBAAmB,UAAU,iBAAmB,UAAU,eAAiB,UAAU,iBAAmB,UAAU,aAAe,UAAU,YAAc,Y,mICIpX,MAAmBC,EAAnB,cASaC,EAAoBC,IAC/B,MAAMC,EAAeC,IAAOF,GAAMG,QAAQD,OAAYA,aAAgBA,IAAOF,GAAMI,KAAKF,QAAaA,aAAgBA,MAASE,KAAKF,IAAOF,KAC1I,IAAIK,EAAQ,EAIZ,OAFAA,EAAQ,IAASJ,EAAaK,UAAY,IAEnC,CACLD,QACAE,KAAO,GAAG,IAASN,EAAaO,SAAW,cAIzCC,EAAuB,EAAGC,OAAMC,eAAe,qBAAOC,WAAW,OAAQC,QAAQ,CAAED,SAAU,OAAQE,MAAO,eAChH,SAAwBC,cAAQ,IACvBhB,EAAiBW,IACvB,CAACA,IAFIL,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAIf,OAAI,IAAIS,MAAOC,YAA8B,kBAATP,EAAoBA,EAAOR,IAAOQ,GAAMQ,YAAmB,iBAAML,MAAO,CAAEC,MAAO,WAAtB,SAAoCH,IAGjIN,GAAS,IACL,iBAAMQ,MAAQA,EAAd,SAAuBN,KAEvB,SAACT,EAAD,CAAeqB,MAAQT,EAAOU,WAAaP,KAKnD,K,gUCzCIQ,EAAiB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gTAAoT,KAAQ,SAAU,MAAS,YAC3e,U,eCII,EAAiB,SAAwBjC,EAAOC,GAClD,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAeC,YAAc,iBAC7B,QAA4B,aAAiB,G,+ECO7C,MAAM4B,EAAW,SAwBXC,EAAmC,CACvCC,QAAS,eACTC,MAAO,OACPC,WAAY,OACZC,UAAW,UAGPC,EAAqC,CACzCJ,QAAS,eACTK,aAAc,KAGVC,EAA+B1C,IACnC,QAAuDA,EAA/C2C,gBAAR,WAAuD3C,EAA7B4C,mBAA1B,MAAwC,UAAxC,EACA,EAAe,cAAf,eAAOC,EAAP,KACA,GAAwCC,eAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,cAAmB,IAAvD,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAkDJ,cAAmB,IAArE,eAAOK,EAAP,KAA0BC,EAA1B,KACA,GAA0CN,eAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAA8CR,eAAS,GAAvD,eAAOS,EAAP,KAAwBC,EAAxB,KACA,GAAkCC,QAAoBzD,EAAM0D,QAASd,GAA7De,EAAR,EAAQA,cAAeC,GAAvB,EAAuBA,OACvB,IAA4Cd,eAAS,GAArD,iBAAOe,GAAP,MAAuBC,GAAvB,OAEAC,gBAAU,KACwC,IAA5C,IAAYJ,GAAiB,IAAIK,QACnCR,GAAmB,KAEpB,CAACxD,EAAM0D,QAASC,EAAcM,UAAWN,EAAcO,aAE1D,MAAMC,GAAe,KACnBtB,EACGuB,iBACAC,MAAMC,IACLhB,GAAiB,GACjB,MAAQiB,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,OAAWC,GAAjC,OAA0CJ,EAA1C,4BACMK,EAAa,CACjBV,UAAWjE,EAAM0D,QACjBkB,WAAa,GAAGL,KAAUC,KAAYC,IACtCI,eAAgBH,EAAKG,eACrBjC,aAAkB,OAAL5C,QAAK,IAALA,OAAA,EAAAA,EAAO4C,cAAe,YAGrCkC,QAA0BH,GACvBN,MAAMU,IACLzB,GAAiB,GACA,MAAbyB,EAAIC,OACNC,EAAA,gBAAgB,4BAChBrB,KACA5D,EAAMkF,eAAiBlF,EAAMkF,oBAGhCC,OAAM,KACL7B,GAAiB,SAGtB6B,OAAM,KACL7B,GAAiB,OAIjB8B,GAAiB,KACrBpC,GAAgB,IAGZqC,GAAgB,KACpBrC,GAAgB,GACZC,EAAW4B,iBACbf,IAAkB,GAClBV,EAAqBH,GACrBJ,EAAKyC,eAAe,CAClBT,eAAgB5B,EAAW4B,mBAK3BU,GAAoB,KAEpBpC,EAAkB0B,gBACpB3B,EAAcC,GAEhBH,GAAgB,IAGZwC,GAAe,EAAGC,WACtB,MAAQC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SAEtB,GAAe,cAAXD,EAAwB,CAC1B,QAA6CC,GAAY,GAAxCf,EAAjB,EAAQI,QAAyBY,EAAjC,EAAiCA,QAE7BA,EACF3C,EAAc,CACZwC,OACAb,mBAGFI,EAAA,aAAa,wEAKnB,OACE,UAAC,WAAD,YACE,eAAMpC,KAAOA,EAAb,WACE,UAACX,EAAD,CAAU4D,MAAM,2BACdC,MACExC,GACE,6DAEE,iBAAM9B,MAAO,CAAEW,QAAS,gBAAxB,UACE,SAACf,EAAA,EAAD,CAAWC,KAAOqC,EAAcqC,cAC9BzE,aAAa,qBACbE,MAAO,CACLC,MAAO,sBACPU,QAAS,eACTZ,SAAU,eAMlB,2BAGJC,MAAO,CAAEgB,aAAc,GApBzB,WAsBE,SAACP,EAAD,CAAUT,MAAQe,EAChBkD,KAAK,OACLO,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,6BAFtC,UAIE,cAAakB,KAAO,EAClBC,IAAM,EACN3E,MAAO,CAAEY,MAAO,SAChBgE,YAAY,oBAGhB,iBAAM5E,MAAQU,EAAd,gBACA,SAACD,EAAD,CAAUT,MAAQe,EAChBkD,KAAK,SACLO,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,6BAFtC,UAIE,cAAakB,KAAO,EAClBC,IAAM,EACNE,IAAM,GACN7E,MAAO,CAAEY,MAAO,SAChBgE,YAAY,oBAGhB,iBAAM5E,MAAQU,EAAd,gBACA,SAACD,EAAD,CAAUT,MAAQe,EAChBkD,KAAK,SACLO,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,6BAFtC,UAIE,cAAakB,KAAO,EAClBC,IAAM,EACNE,IAAM,GACN7E,MAAO,CAAEY,MAAO,SAChBgE,YAAY,iBAIlB,SAACnE,EAAD,CAAU4D,MAAM,2BAAhB,UACE,iBAAKrE,MAAO,CAAEW,QAAS,eAAgBE,WAAY,QAAnD,WACE,cAAQiE,KAAK,OACXC,QAAUpB,GACV3D,MAAO,CACLgF,SAAU,WACVC,OAAQ,IAJZ,kDASCvD,EAAkB0B,gBAAkBhB,KACnC,cAAG8C,KAAOxD,EAAkB0B,eAC1BpD,MAAO,CACLW,QAAS,QACTqE,SAAU,WACVC,OAAQ,GACRE,WAAY,QALhB,SAQGzD,EAAkBuC,QAGvB,SAACxD,EAAD,CAAUwD,KAAK,iBACbjE,MAAO,CAAEoF,UAAW,QAASD,WAAY,QACzCX,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,mCAFtC,UAIE,cAAOxD,MAAO,CAAEW,QAAS,qBAMjC,eAAO0E,MAAM,2BACXzE,MAAQ,IACR0E,QAAUhE,EACViE,KAAO3B,GACP4B,SAAW1B,GAJb,WAME,iBAAK9D,MAAO,CAAEc,UAAW,UAAzB,4CAEE,cAAQ2E,gBAAiB,EACvBC,OAAO,8FACP1F,MAAO,CAAEmF,WAAY,QACrBQ,OAAU,GAAGC,sCACb3B,KAAK,WACL4B,KAAM,CACJC,OAAQ,kBACRC,SAAU,GAEZC,SAAWjC,GATb,UAWE,cAAQe,KAAK,UAAUlG,MAAO,SAAC,EAAD,IAA9B,wCAID4C,EAAW4B,iBACV,cAAG8B,KAAO1D,EAAW4B,eACnBpD,MAAO,CAAEoF,UAAW,OAAQzE,QAAS,SADvC,SAGGa,EAAWyC,WAIlB,iBAAKjE,MAAO,CAAEc,UAAW,SAAUsE,UAAW,QAA9C,2CAEE,cAASa,UAAU,SACjBC,SAAU,gBAAKC,IAAMC,IAAUpG,MAAO,CAAEY,MAAO,WADjD,UAGE,iBAAMZ,MAAO,CAAEC,MAAO,UAAWkF,WAAY,QAA7C,0DAMLjE,GACC,cAAKlB,MAAO,CAACC,MAAO,OAApB,mGAEA,0BACE,wBACE,cAAQ8E,QAAU,KAChB3D,EAAKiF,eADP,6BAOF,cAAKC,OAAS,EAAd,UACE,cAAQxB,KAAK,UACXC,QAAUrC,GACV6D,QAAU3E,EAFZ,+CAaZ,K,oMC9SA,MAAQ4E,EAAR,WAEA,IAAIC,EAEJ,SAASC,EAAMpG,EAAeqG,GAK5B,SAASC,KACPC,OAAmB,CAAExB,MAAO/E,EAAOwG,aAAc,MAAOlE,MAAMU,IAAa,MACzE,MAAMyD,GAAU,OAAHzD,QAAG,IAAHA,GAAA,UAAAA,EAAKuC,YAAL,eAAWkB,OAAQ,GAEhCJ,EAASI,MARTN,IACFO,aAAaP,GACbA,EAAU,MAUZA,EAAU,IAAWG,EAAM,KAS7B,MAAMK,EAAiC1I,IACrC,MAAQ+B,EAA2B/B,EAA3B+B,MAAO0F,EAAoBzH,EAApByH,SAAUpF,EAAUrC,EAAVqC,MACzB,GAAwBS,cAAgB,IAAxC,eAAO0F,EAAP,KAAaG,EAAb,KAEMC,EAAgBC,IAChBA,EACFV,EAAMU,GAAWC,GAAmBH,EAAQG,KAE5CH,EAAQ,KAINI,EAAgBF,IACpB,MAAQ9G,EAAU8G,EAAV9G,MACR,EAAoBiH,KAAKC,MAAMlH,GAAvB2B,EAAR,EAAQA,QAER+D,EAAS,IAAKoB,EAAUK,UAAWnH,EAAOA,MAAO2B,KAGnD,OACE,cAAQyF,YAAa,EACnBC,cAAe,EACfrH,MAAQA,EACRN,MAAO,CAAEY,MAAOA,GAAS,QACzBgE,YAAY,2EACZgD,0BAA2B,EAC3BC,WAAY,EACZC,cAAe,EACfC,SAAWZ,EACXnB,SAAWsB,EACXU,iBAAkB,iBAVpB,SAYG,IAAAjB,GAAI,KAAJA,GAAUkB,IAAY,SAACzB,EAAD,CAAQlG,MAAQ,IAAe2H,GAA/B,SAAuDA,EAAE5C,OAAf4C,EAAEhG,cAKzE,K,wEC5DOiG,eAAerB,EAAmBsB,GACvC,aAAaC,QAAS,GAAGC,oEAAiF,CACxGC,OAAQ,OACRC,KAAM,CACJC,MAAOL,EACPM,KAAM,CAAE3D,KAAM,OAAQ4D,IAAK,cAC3BC,WAAY,CAAEC,SAAU,IAAKC,QAAS,Q,yHCH5C,MAAMC,EAAcvK,IAClB,MAAQ8G,EAAoB9G,EAApB8G,MAAO0D,EAAaxK,EAAbwK,SAEf,OACE,eAAGC,UAAYhJ,eAAf,WACE,iBAAMgJ,UAAYhJ,mBAAlB,SAA0CqF,IACzC0D,GAEG,SAAC,KAAD,CAAME,GAAKF,EAAX,UACE,cAAQjE,KAAK,UAAUoE,KAAK,QAA5B,4BAEF,OAMV,K,wHChBOhB,eAAeiB,EAAiBC,GASrC,MAAMvD,EAAO,CACX,KAAQ,IACR,MAAS,IACT,QAAW,UACX,YAAe,GACf,KAAQ,CAAC,CACP,KAAQ,WACR,MAAS,IAEX,SAAW,EACX,IAAO,WAGT,OAAOA,EAIFqC,eAAemB,EAAwBD,GAC5C,aAAahB,QACV,GAAGC,qEACJ,CACEC,OAAQ,OACRC,KAAMa,IAMLlB,eAAeoB,EAAkBC,GACtC,aAAanB,QAAS,GAAGC,kCAA+C,CACtEC,OAAQ,OACRC,KAAMgB,IAKHrB,eAAe7E,EAA0BkG,GAC9C,aAAanB,QAAS,GAAGC,yCAAsD,CAC7EC,OAAQ,OACRC,KAAM,IAAKgB,EAAcC,MAAOC,QAK7BvB,eAAewB,EACpBH,EAAwCI,GAUxC,aAAavB,QAAS,GAAGC,iCAA8C,CACrEC,OAAQ,OACRC,KAAMgB,M,yjBCpEH,SAASK,EAAiBzB,GAC/B,OAAOC,QAAS,GAAGC,iEAA8E,CAC/FC,OAAQ,OACRC,KAAM,IACDJ,KAMF,SAAS0B,EAAiB1B,GAC/B,OAAOC,QAAS,GAAGC,iEAA8E,CAC/FC,OAAQ,OACRC,KAAM,CACJrC,QAAS,IACJiC,GAEL2B,OAAQ3B,EAAO4B,aACfC,SAAU7B,EAAO6B,SACjBC,QAAS,kB,kKCFf,MAAQC,GAAR,WACeC,GAAf,WAEMC,GAAW,GACXC,GAAY,SACZC,GAAa,CACjB3B,WAAY,CAAEC,SAAUwB,GAAUvB,QAAS,GAC3CL,MAAO,CAAE+B,SAAUF,GAAWnG,OAAQ,GACtCuE,KAAM,CAAE3D,KAAM,OAAQ4D,IAAK,gBAGvB8B,GAAgBjM,IACpB,MAAQ+G,EAAkC/G,EAAlC+G,QAASmF,EAAyBlM,EAAzBkM,WAAYzE,EAAazH,EAAbyH,SAC7B,GAAwC3E,cAASiJ,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACA,GAAoCtJ,cAAS,IAA7C,eAAOuJ,EAAP,KAAmBC,EAAnB,KACA,GAA0CxJ,eAAS,GAAnD,eAAOyJ,EAAP,KAAsBC,EAAtB,KACA,GAAuDC,OACrDN,GADMO,EAAR,EAAQA,SAAUtC,EAAlB,EAAkBA,WAAYuC,EAA9B,EAA8BA,aAG9B,GAHA,EAA4C/I,QAGRd,iBAApC,eAAO8J,EAAP,KAAmBC,EAAnB,MAEA9I,gBAAU,KACR,OAAI2I,QAAJ,IAAIA,KAAU1I,QACZsI,GAAeQ,GAAyB,IAAIA,KAAkBJ,OAE/D,CAACA,IAEJ,MAAMK,EAAW,KACfb,GAAW,GACXzE,GAAWA,EAASmF,IAEhBI,EAAe,KACnBd,GAAW,IAEPe,EAAgBlL,IACpBuK,EAAc,IACdF,GAAiBc,IACf,MAAQjD,EAA4BiD,EAA5BjD,MAA4BiD,EAArB9C,WAEf,MAAO,IACF8C,EACHjD,MAAO,IACFA,EACHkD,SAAUpL,GAEZqI,WAAY,CACVE,QAAS,EACTD,SAAQ,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAYC,eAOxB+C,EAAuB,KAC3B,MAAQnD,EAA4BkC,EAA5BlC,MAAmBoD,EAASlB,EAArB/B,WAEf,IAAQ,OAAJiD,QAAI,IAAJA,OAAA,EAAAA,EAAM/C,UAAN,OAAgBF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYC,WAA5B,OAAuCD,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAYkD,OAAO,CAC5D,IAAIC,EAAO,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAM/C,QAEpBiD,GAAoB,EACpBnB,EAAgB,IACXD,EACHlC,QACAG,WAAY,CACVE,QAASiD,EACTlD,SAAQ,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAYC,iBAI1BmC,GAAiB,IAIfgB,EAAe9H,GACX+H,IACNZ,EAAc,CAAEa,GAAID,EAAEE,OAAO5L,MAAO2D,UAIxC,OACE,gBAAOoB,MAAM,iCACXC,QAAUA,EACVC,KAAO+F,EACP9F,SAAW+F,EAHb,WAKE,kBAAKvL,MAAO,CAAEgB,aAAc,QAA5B,4CAEE,eAAQpC,MAAO,UAACuN,EAAA,EAAD,IACbrH,KAAK,UACLsH,MAAM,SACNpM,MAAO,CAAEmF,WAAY,QACrBJ,QAAU,KACRyG,EAAa,WAInB,kBAAKxL,MAAO,CAAEqM,OAAQ,iBAAkBC,QAAS,aAAjD,WACE,UAACpC,GAAD,CAAQlK,MAAO,CAAEgB,aAAc,QAAU+G,SAAWyD,KACpD,eAAMe,SAAWrB,EAAjB,UACE,iBAAKlL,MAAO,CACVwM,OAAQ,QACRC,SAAU,OACVH,QAAS,iBAHX,UAME,UAAC,KAAD,CAAgBI,aAAc,EAC5BC,UAAY,EACZC,UAAY,GACZC,SAAWlB,EACXmB,SAAW5B,GAAgBJ,EAC3BiC,WAAY,EALd,UAOE,UAAC5C,GAAD,UACG,IAAAS,GAAU,KAAVA,GAAgBoC,IACf,gBAAOhE,UAAYhJ,gBAEjBM,MAAQ0M,EAAKC,OACbjH,SAAW+F,EAAYiB,EAAKtB,UAH9B,UAKE,kBAAK1C,UAAYhJ,eAAjB,WACE,eAAQgJ,UAAYhJ,qBAClBmG,IAAM6G,EAAKE,cAEb,2BAAOF,EAAKtB,eARRsB,EAAKC,yBAqB/B,M,oIC5JA,MAAMnI,GAAO,mBAEPqI,GAAmB,EACvBC,QACAC,UACArE,YACAhJ,WACGsN,MAEH,MAAM9O,GAAM+O,cACZ,GAA0CC,QAAQ,CAChD9H,OAAQZ,GACR2I,QAAUC,IACR,QAA6BA,EAAQC,WAAa,GAAnCC,EAAf,EAAQR,MAER,OAAIQ,IAAcR,EACT,GAGF,CACLS,OAAQH,EAAQG,SAChBC,cACEF,EAAYR,EAAQ,sBAAwB,sBAGlDW,KAAOf,IACLK,EAAQL,EAAKI,MAAOA,MAhBxB,sBAASS,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,cAAiBC,EAAlC,KAmBA,GAAiBC,QAAQ,CACvBlJ,QACAkI,KAAM,CAAEI,SACRK,QAAUC,IAAD,CACPO,WAAYP,EAAQO,iBAJxB,eAASC,EAAT,KAUA,OAFAH,EAAKG,EAAK1P,KAGR,gBACEA,IAAKA,EACLwK,UAAY,GAAEA,IAAY6E,EAASC,EAAgB,KACnD9N,MAAO,CAAEmO,OAAQ,UAAWnO,MACxBsN,KAOJc,GAAoB7P,IACxB,MAAQwI,EAA4BxI,EAA5BwI,KAAMsH,EAAsB9P,EAAtB8P,QAASC,EAAa/P,EAAb+P,SAEjBC,EAAU,CACd,CACElJ,MAAO,eACPmJ,UAAW,QACX9F,IAAK,QACL+F,OAAQ,CAACC,EAAMC,EAAQvB,KACZ,2BAAOA,EAAQ,KAG5B,CACE/H,MAAO,2BACPmJ,UAAW,QACX9F,IAAK,SAEP,CACErD,MAAO,eACPmJ,UAAW,SACX9F,IAAK,SACL+F,OAAQ,CAACC,EAAMC,EAAQvB,KACd,UAAC9O,GAAA,EAAD,CAAeyG,QAASuJ,EAASlB,OAKxCwB,EAAa,CACjBrG,KAAM,CACJsG,IAAK1B,KAIHE,GAAUyB,kBACd,CAAClB,EAAWmB,KACV,MAAMC,EAAUjI,EAAK6G,GAErBS,EACEY,KAAOlI,EAAM,CACXmI,QAAS,CACP,CAACtB,EAAW,GACZ,CAACmB,EAAY,EAAGC,SAKxB,CAACjI,IAGH,OACE,UAACoI,GAAA,EAAD,CAAaC,QAASC,MAAtB,UACE,gBACEC,OAAO,UACPf,QAASA,EACTgB,WAAYxI,EACZ6H,WAAYA,EACZY,MAAO,CAACb,EAAQvB,KAAT,CACLA,QACAC,YAEF1E,YAAY,OAMpB,M,4BCnFA,MAAM8G,GAAc,CAClB,CACE7O,MAAO,IACP4L,OAAQ,IACRkC,KAAM,6BAGJgB,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGdE,GAAR,aAEMC,IAAYC,UAGZC,IAFW,IAAAF,IAAS,KAATA,GAAkBG,aAEP3R,IAAe,MACzC,QAAe,cAAf,eAAO6C,EAAP,KACA,GAA8BC,gBAA9B,eAAgB8O,GAAhB,WACA,GAAoC9O,eAAS,GAA7C,eAAO+O,EAAP,KAAmBC,EAAnB,KACA,GAAoChP,cAAS,CAC3CiP,SAAU,GACVC,QAAS,GACTvG,SAAU,KAHZ,eAAOwG,EAAP,KAAmBC,EAAnB,KAKA,GAAiBC,UAAT7K,EAAR,EAAQA,KAEF8K,GAAepD,aAAO,GAC5B,GAAwClM,eAAS,GAAjD,eAAOuP,EAAP,KAAqBC,EAArB,KAEA,IAAwBxP,eAAS,GAAjC,iBAAOyP,GAAP,MAAaC,GAAb,MAEA,IAAwB1P,cAAS,IAAjC,iBAAO0F,GAAP,MAAasH,GAAb,MAEA,IAAgDhN,cAAS,IAAzD,iBAAO2P,GAAP,MAAyBC,GAAzB,MAEMlH,IAAe7J,cAAQ,KAAM,QACjC,cAAO3B,QAAP,IAAOA,GAAP,UAAOA,EAAO2S,gBAAd,iBAAO,EAAiB1I,aAAxB,aAAO,EAAwBvG,UAC9B,CAAC1D,IAEE4S,GAAUjJ,UACd,MAAM5E,QAAY8N,SAAkBrH,IAGpC,GAAgB,KAAZzG,EAAIC,KAAa,CACnB,MAAM8N,EAAS/N,EAAIuC,KACnB,EAAiEwL,EAAzDC,cAAR,MAAiB,GAAjB,IAAiED,EAA5C3F,gBAArB,MAAgC,GAAhC,IAAiE2F,EAA7BE,iBAApC,MAAgD,GAAhD,EAAoDvH,EAAaqH,EAAbrH,SAEpDqE,GAAQiD,GAAU,IAClBL,GAAoBI,GACpBZ,EAAc,CAAEH,SAAU5E,EAAU6E,QAASgB,EAAWvH,gBAI5D1H,gBAAU,KACJyH,IACFoH,OAED,CAAC5S,IAEJ,MAAMiT,IAAWtR,cAAQ,KACvB,MAAMuR,EAAMC,MAAU,OAACV,SAAD,IAACA,QAAD,EAACA,GAAkBlK,eAAiB,GAE1D,OAAO,IAAA2K,GAAG,KAAHA,EAAY,iBAAS,IAC3B,CAACT,KAGEW,GAAa,KACjBC,UAAa,oCAGTC,GAAwB,KAC5B,IACExM,EAWE2L,GAXF3L,MACAyM,EAUEd,GAVFc,cACAC,EASEf,GATFe,YACAC,EAQEhB,GARFgB,SACAC,EAOEjB,GAPFiB,SACUC,EAMRlB,GANFmB,SACAC,EAKEpB,GALFoB,YACAC,EAIErB,GAJFqB,WARF,EAYIrB,GAHFlM,YATF,MASS,IATT,IAYIkM,GAFFM,cAVF,MAUW,GAVX,EAWEC,EACEP,GADFO,UAEF,MAAMe,EAAUR,EAAgB,CAACA,GAAiB,GAClD,IAAIxR,EAAO+D,EAEPiN,GAAUA,EAAO/O,OAAS,GAC5BjC,EAAQgR,EAAO,GAAGrP,QAClBoC,EAAQiN,EAAO,GAAGjM,OAElBiM,EAAS,GAIXlQ,EAAKyC,eAAe,CAClBwB,QACAkN,WAAmB,OAAPD,QAAO,IAAPA,KAAS/P,OACjB,CACA,CACEiQ,KAAK,IAAIrS,MAAOC,UAChB6D,MAAM,IAAI9D,MAAOC,UACjB8D,OAAQ,OACRuO,IAAKH,EAAQ,KAGf,GACJP,cACAC,WACAC,SAAUA,EAAW1K,KAAKC,MAAMyK,GAAY,GAC5CE,SAAUD,GAAgB7S,IAAO6S,GACjCE,YAAaA,GAAe/S,IAAO+S,GACnCC,WAAYA,GAAchT,IAAOgT,GACjCvN,KAAMA,EAAO,GACb4N,SAAU,CAAEpS,QAAO+D,SACnBsO,SAAU,CAAE1G,GAAIsF,KAElBpB,EAAWa,MAGb1O,gBAAU,KACR,OAAI0O,SAAJ,IAAIA,OAAkBlH,QACpB+H,OAED,QAACb,SAAD,IAACA,QAAD,EAACA,GAAkBlH,UAEtBxH,gBAAU,KACR,MAAMmE,EAAU,KAAW,KAEzBoK,GAAgB,KACf,MAEH,MAAO,KACL7J,aAAaP,MAEd,KAEeqI,kBAAY,KAC5B,MAAQnM,EAAmBvB,EAAnBuB,eAERA,IACGC,MAAMC,IAAgB,QACrB,MAAM+P,EAAW,IAAK/P,GAEtB+P,EAASL,WAAmB,OAAN1P,QAAM,IAANA,GAAA,UAAAA,EAAQ0P,kBAAR,SAAoBhQ,OACtC,IAAe,QAACM,QAAD,IAACA,GAAD,UAACA,EAAQ0P,WAAW,UAApB,aAAC,EAAuBE,MACvC,IAAe,IACnBtC,EAAWyC,MAEZlP,OAAOmP,IACNC,QAAQC,IAAI,YAAaF,QAE5B,CAACzR,IAfJ,MAiBM4R,IAAgBlE,kBAAY,KAChC,MAAQnM,EAAmBvB,EAAnBuB,eAERA,IACGC,MAAKsF,UAAuB,MAC3B4K,QAAQC,IAAIlQ,GAEZ,MACEwC,EAMExC,EANFwC,MACAkN,EAKE1P,EALF0P,WACAR,EAIElP,EAJFkP,YAEY9F,GAEVpJ,EAHF6P,SAGE7P,EAFF8P,SAAY1G,IACZnH,EACEjC,EADFiC,KAGIqD,EAAS,CACboJ,UAAWtF,EACXgH,WAAY,EACZnB,cAAyB,OAAVS,QAAU,IAAVA,KAAYhQ,OAAZ,UAAqBgQ,EAAW,UAAhC,aAAqB,EAAeE,IAAM,GACzD3L,aAAc,EACd4L,SAAU,IAAA3L,IAAI,KAAJA,IAAS,CAACiG,EAAMI,KACjB,CAAEnL,QAAS+K,EAAK/K,QAAS+C,SAAUoI,EAAQ,MAEpD2E,cACA1M,QACAP,KAAM,IAASA,GACfoO,YAAa,GAGfJ,QAAQC,IAAI,SAAU5K,GACtBkI,GAAc,GAEd,IAAI,MACF,IAAI/M,EAAW,GAuBR,MAJP,GAhBEA,EADEyG,SACUF,EAAiB,IACxBmH,MACA7I,EACH4B,wBAUUH,EAAiB,IAAKzB,IAGlB,OAAX,QAAH,EAAA7E,SAAA,eAAKC,MACPsN,GAAgB,GAChBrN,EAAA,gBAAgB,kCAChBmO,UAEAnO,EAAA,eAAiB,QAAH,EAAAF,SAAA,eAAKE,UAAW,8CAEhC,MAAO2P,GACP3P,EAAA,qBAAc2P,QAAd,IAAcA,OAAd,EAAcA,EAAO3P,SA5BvB,QA8BE6M,GAAc,OAGjB3M,OAAOmP,IACNC,QAAQC,IAAI,YAAaF,QAE5B,CAACzR,EAAM2I,GAAcyH,GAAUR,GAAkBjK,KAE9CqM,GAAmB,KACvBrC,IAAQ,IAGJsC,GAAgB/S,IAAU,MAC9B,MAAQ2L,EAAa3L,EAAb2L,GAAIhI,EAAS3D,EAAT2D,KAEZwM,EAAc,CACZH,SAAUrM,EACVsM,QAAStE,EACTjC,UAAc,OAAJnE,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,eAAYhH,cAAe,MAInCyU,GAAsBhT,IAC1B,IAAMmH,EAAcnH,EAAdmH,UAENA,EAAYF,KAAKC,MAAMC,GAEvB4G,IAASkF,GACH,IAAAA,GAAG,KAAHA,GAAUvG,GAASA,EAAK/K,UAAYwF,EAAUxF,WAChDuB,EAAA,aAAa,0DACN,IAAI+P,IAEJ,IAAIA,EAAK,IAAK9L,OAKrB6G,GAAYlB,GACT,KACL,MAAMoG,EAAU,IAAIzM,IAEpB,IAAAyM,GAAO,KAAPA,EAAepG,EAAO,GACtBiB,GAAQmF,IAINC,GAAgB,OAItB,OACE,kBAAKzK,UAAYhJ,2BAAjB,WACE,UAAC,KAAD,CAAQ0T,KAAO9C,EACbpN,QAAW0N,IACJP,EAAa9H,UAIlB,YAAc,CACZxD,MAAO,uCACPa,QAAS,uEACTX,KAAM,KACJoL,EAAa9H,SAAU,EACvB+I,UAAaV,EAASyC,WAExBnO,SAAU,KACRmL,EAAa9H,SAAU,MAInB8H,EAAa9H,YAGzB,2BACE,eAAK+G,KAAO,GAAK5G,UAAYhJ,4BAA7B,UACE,mBAAW0P,GAAStO,KAAOA,EAAOwS,cAAe,CAAE9O,KAAM,KAAzD,WACE,UAAC,IAAD,CAAYO,MAAM,0CAClB,kBAAK2D,UAAYhJ,qBAAjB,WACE,oBAAWqE,MAAM,2BACfJ,KAAK,QACLO,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,oCAFtC,UAIE,eAAOxD,MAAO,CAAEY,MAAO,OAASgE,YAAY,2DAAciP,UAAY,QAExE,oBAAWxP,MAAM,2BAAOJ,KAAK,cAA7B,UACE,UAAC6L,GAAD,CAAUgE,KAAO,EACflP,YAAY,yCACZiP,UAAY,OAGf9J,GACCyH,IACE,eAAGxI,UAAYhJ,qBAAf,UACE,UAAC,KAAD,OAGF,iBAAKgJ,UAAYhJ,qBAAjB,UACE,gBAASiG,UAAU,WACjBZ,OACE,eAAGrF,MAAO,CAAEY,MAAO,KAAnB,oHAFJ,WAOE,UAAC,KAAD,KACA,UAAC9B,EAAA,EAAD,CAA2BkK,UAAYhJ,0BAK3C,SAEN,oBAAWqE,MAAM,2BACfJ,KAAK,aACL8P,cAAc,WAFhB,UAIE,UAACC,EAAA,EAAD,CAAYvE,YAAcA,GACxBwE,UAAW,EACXC,SAAS,oBAGb,qBAAW7P,MAAM,2BACfG,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,gDADtC,WAGE,6BACE,2BAAOgN,EAAWF,WAAiB,KACnC,eAAGvL,QAAUqO,GAAb,kEAEF,oBAAWnP,KAAK,WACdkQ,SAAU,EACV3P,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,oCAFtC,UAIE,UAAC,GAAD,CAAc8B,QAAUwL,GACtBrG,WAAasG,GACb/K,SAAWqN,WAIjB,oBAAWhP,MAAM,2BAAOJ,KAAK,OAA7B,UACE,sBAAamQ,QAAUC,MAAsBC,WAAW,SAASC,UAAQ,OAE3E,oBAAWlQ,MAAM,2BACfJ,KAAK,WACLO,MAAQ,CAAC,CAAEC,UAAU,EAAMjB,QAAS,oCAFtC,UAIE,UAACyD,GAAA,EAAD,CAAoBjB,SAAWsN,GAC7BtT,MAAO,CAAEY,MAAO,UAGpB,UAAC,GAAD,CAAkBmG,KAAOA,GACvBsH,QAAUA,GACVC,SAAWA,MAIX0C,GAAiBlM,MACf0P,MAAgBxD,GAAiBlM,OAChC,MAAA0P,MAAgBxD,GAAiBlM,OAAjC,OAA+C,iBAChD,kBAAKkE,UAAYhJ,YAAjB,WAME,eAAQgJ,UAAYhJ,QAAY+E,QAAU4M,GAA1C,2BAGA,eAAY1L,UAAU,WACpBZ,MAAM,mDACNoP,UAAYzB,GACZ0B,OAAO,eACPC,WAAW,eAJb,UAME,eAAQpO,QAAU6J,EAChBpH,UAAYhJ,QACZ8E,KAAK,UAFP,SAIGiF,KAAiByH,GAAW,2BAAS,sBAI1C,WAIV,eAAK5B,KAAO,GACV5G,UAAY4L,IAAW,CACrB5U,4BACAA,uBAHJ,UAME,kBAAKgJ,UAAYhJ,iBAAjB,WACE,UAAC,IAAD,CAAYqF,MAAM,8BAClB,UAACwP,GAAA,EAAD,CAAoB5S,QAAU8H,GAC5B5I,YAAY,cACZsC,cAAgBgQ,GAChBvS,UAAY6I,kBA6C1B,IAAe+K,QAAe7E,GAAoB,CAACC,YAAaA,c,gBCrfhEnR,EAAOC,QAAU,IAA0B","file":"p__FilmListManage__ProductionDataForm.ca03c267.async.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\n\nExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleOutlined);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"initCountWrap\":\"_17ms1R\",\"productionDataFormWrap\":\"_1Fh5GP\",\"titleWarm\":\"_3xBqgr\",\"productionDataFormChunk\":\"_2Wik4D\",\"addInitCount\":\"_ZjiDHz\",\"btnList\":\"_thr1M7\",\"btn\":\"_1N7ZX9\",\"greenBtn\":\"_2hD2oj\",\"productionDetail\":\"_2rD427\",\"productionStatus\":\"_DRFlTl\",\"productionIcon\":\"_U7SeT-\",\"commontChunkWrap\":\"_1uJYfv\",\"commontChunk\":\"_KnFKZw\",\"commontItem\":\"_c5nFnf\"};","import React, { FC, useMemo } from 'react';\nimport { Statistic } from 'antd';\nimport moment from 'moment';\nimport { css } from '@emotion/core';\n\nconst { Countdown: TimeCountdown } = Statistic;\n\nexport interface Props {\n  time: number | string;\n  overTimeText?: string;\n  style?: React.CSSProperties;\n  fontSize?: number | string;\n}\n\nexport const formatExpireTime = (date: any) => {\n  const milliSeconds = moment(date).isAfter(moment()) ? moment.duration(moment(date).diff(moment())) : moment.duration(moment().diff(moment(date)));\n  let hours = 0;\n\n  hours = parseInt(milliSeconds.asHours() + '');\n\n  return {\n    hours,\n    days: `${ parseInt(milliSeconds.asDays() + '') }天`\n  };\n};\n\nconst Countdown: FC<Props> = ({ time, overTimeText = '已超时', fontSize = '14px', style = { fontSize: '14px', color: '#1890ff' } }: Props) => {\n  const { hours, days } = useMemo(() => {\n    return formatExpireTime(time);\n  }, [time]);\n\n  if (new Date().getTime() >= (typeof time === 'number' ? time : moment(time).valueOf())) return <span style={{ color: '#f81d22' }}>{overTimeText}</span>;\n\n  return (\n    hours >= 24\n      ? <span style={ style }>{days}</span>\n      : (\n        <TimeCountdown value={ time } valueStyle={ style } />\n      )\n  );\n};\n\nexport default Countdown;\n","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import React, { FC, useState, useEffect } from 'react';\nimport {\n  Form,\n  Upload,\n  Modal,\n  InputNumber,\n  Row,\n  Col,\n  Button,\n  Popover,\n  message,\n  Input,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport templte from './templete.png';\nimport systemBasePath from '@/services/login';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport { saveAndStartCommentAdjust } from '../../pages/DataManage/DataControl/services';\nimport { useGetAdjustComment } from '@/services/publicServices';\nimport Countdown from '@/components/Countdown';\n\nconst FormItem = Form.Item;\n\ninterface FileInfo {\n  name?: string;\n  commentFileUrl?: string;\n}\ninterface UploadFileType {\n  file: UploadFile;\n}\n\ninterface Props {\n  dramaId: string;\n  successHandle?: () => void;\n  subjectType?: string;\n}\n\ninterface FormValue {\n  endGrade: number;\n  commentFileUrl?: string;\n  hour: number;\n  minute: number;\n  second: number;\n}\n\nconst divideStyle: React.CSSProperties = {\n  display: 'inline-block',\n  width: '24px',\n  lineHeight: '32px',\n  textAlign: 'center',\n};\n\nconst timeFormStyle: React.CSSProperties = {\n  display: 'inline-block',\n  marginBottom: '0',\n};\n\nconst DataInputControl: FC<Props> = (props: Props) => {\n  const { noAction = false, subjectType = 'default', } = props;\n  const [form] = Form.useForm();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [uploadFile, setUploadFile] = useState<FileInfo>({});\n  const [confirmUploadFile, setConfirmUploadFile] = useState<FileInfo>({});\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [showAdjustGrade, setShowAdjustGrade] = useState(false);\n  const { adjustComment, mutate } = useGetAdjustComment(props.dramaId, subjectType);\n  const [showUploadFile, setShowUploadFile] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(adjustComment || {}).length !== 0) {\n      setShowAdjustGrade(true);\n    }\n  }, [props.dramaId, adjustComment.subjectId, adjustComment.updateTime]);\n\n  const modifyHandle = () => {\n    form\n      .validateFields()\n      .then((values: FormValue) => {\n        setSubmitLoading(true);\n        const { hour, minute, second, ...rest } = values;\n        const sendParams = {\n          subjectId: props.dramaId,\n          adjustTime: `${ hour }-${ minute }-${ second }`,\n          commentFileUrl: rest.commentFileUrl,\n          subjectType: props?.subjectType || 'default',\n        };\n\n        saveAndStartCommentAdjust(sendParams)\n          .then((res: any) => {\n            setSubmitLoading(false);\n            if (res.code === 200) {\n              message.success('操作成功');\n              mutate();\n              props.successHandle && props.successHandle();\n            }\n          })\n          .catch(() => {\n            setSubmitLoading(false);\n          });\n      })\n      .catch(() => {\n        setSubmitLoading(false);\n      });\n  };\n\n  const uploadTemplete = () => {\n    setModalVisible(true);\n  };\n\n  const modalOkHandle = () => {\n    setModalVisible(false);\n    if (uploadFile.commentFileUrl) {\n      setShowUploadFile(true);\n      setConfirmUploadFile(uploadFile);\n      form.setFieldsValue({\n        commentFileUrl: uploadFile.commentFileUrl,\n      });\n    }\n  };\n\n  const modalCancelHandle = () => {\n    // 取消时，将uploadFile修改为之前的confirmUploadFile，表示上传本次操作不生效，避免下次打开弹窗仍然是上次不生效的文件\n    if (confirmUploadFile.commentFileUrl) {\n      setUploadFile(confirmUploadFile);\n    }\n    setModalVisible(false);\n  };\n\n  const uploadChange = ({ file }: UploadFileType) => {\n    const { name, status, response } = file;\n\n    if (status !== 'uploading') {\n      const { message: commentFileUrl, success } = response || {};\n\n      if (success) {\n        setUploadFile({\n          name,\n          commentFileUrl,\n        });\n      } else {\n        message.warn('上传失败，请重新上传！');\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Form form={ form }>\n        <FormItem label=\"灌评时间\"\n          extra={\n            showAdjustGrade ? (\n              <div>\n                剩余时间：\n                <span style={{ display: 'inline-block' }}>\n                  <Countdown time={ adjustComment.adjustEndTime }\n                    overTimeText=\"已过期\"\n                    style={{\n                      color: 'rgba(0, 0, 0, 0.45)',\n                      display: 'inline-block',\n                      fontSize: '14px',\n                    }}\n                  />\n                </span>\n              </div>\n            ) : (\n              '剩余时间'\n            )\n          }\n          style={{ marginBottom: 0 }}\n        >\n          <FormItem style={ timeFormStyle }\n            name=\"hour\"\n            rules={ [{ required: true, message: '该项必输' }] }\n          >\n            <InputNumber step={ 1 }\n              min={ 0 }\n              style={{ width: '120px' }}\n              placeholder=\"小时\"\n            />\n          </FormItem>\n          <span style={ divideStyle }>:</span>\n          <FormItem style={ timeFormStyle }\n            name=\"minute\"\n            rules={ [{ required: true, message: '该项必输' }] }\n          >\n            <InputNumber step={ 1 }\n              min={ 0 }\n              max={ 59 }\n              style={{ width: '120px' }}\n              placeholder=\"分钟\"\n            />\n          </FormItem>\n          <span style={ divideStyle }>:</span>\n          <FormItem style={ timeFormStyle }\n            name=\"second\"\n            rules={ [{ required: true, message: '该项必输' }] }\n          >\n            <InputNumber step={ 1 }\n              min={ 0 }\n              max={ 59 }\n              style={{ width: '120px' }}\n              placeholder=\"秒\"\n            />\n          </FormItem>\n        </FormItem>\n        <FormItem label=\"评论模板\">\n          <div style={{ display: 'inline-block', lineHeight: '32px' }}>\n            <Button type=\"link\"\n              onClick={ uploadTemplete }\n              style={{\n                position: 'relative',\n                zIndex: 10,\n              }}\n            >\n              点击上传模板\n            </Button>\n            {confirmUploadFile.commentFileUrl && showUploadFile && (\n              <a href={ confirmUploadFile.commentFileUrl }\n                style={{\n                  display: 'block',\n                  position: 'relative',\n                  zIndex: 10,\n                  marginLeft: '20px',\n                }}\n              >\n                {confirmUploadFile.name}\n              </a>\n            )}\n            <FormItem name=\"commentFileUrl\"\n              style={{ marginTop: '-30px', marginLeft: '20px' }}\n              rules={ [{ required: true, message: '请上传文件' }] }\n            >\n              <Input style={{ display: 'none' }} />\n            </FormItem>\n          </div>\n        </FormItem>\n      </Form>\n\n      <Modal title=\"上传文件\"\n        width={ 400 }\n        visible={ modalVisible }\n        onOk={ modalOkHandle }\n        onCancel={ modalCancelHandle }\n      >\n        <div style={{ textAlign: 'center' }}>\n          添加内容：\n          <Upload showUploadList={ false }\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n            style={{ marginLeft: '20px' }}\n            action={ `${ systemBasePath }/Cmpp/runtime/upload!file.jhtml` }\n            name=\"filedata\"\n            data={{\n              domain: 'y0.ifengimg.com',\n              syncflag: 1,\n            }}\n            onChange={ uploadChange }\n          >\n            <Button type=\"primary\" icon={ <UploadOutlined /> }>\n              上传文件\n            </Button>\n          </Upload>\n          {uploadFile.commentFileUrl && (\n            <a href={ uploadFile.commentFileUrl }\n              style={{ marginTop: '20px', display: 'block' }}\n            >\n              {uploadFile.name}\n            </a>\n          )}\n        </div>\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          支持excel文件\n          <Popover placement=\"bottom\"\n            content={ <img src={ templte } style={{ width: '300px' }} /> }\n          >\n            <span style={{ color: '#008DFF', marginLeft: '30px' }}>\n              查看模板示例\n            </span>\n          </Popover>\n        </div>\n      </Modal>\n      {noAction ? (\n        <Row style={{color: 'red'}}>请先创建片单，在添加灌评哦！</Row>\n      ) : (\n        <Row>\n          <Col>\n            <Button onClick={ () => {\n              form.resetFields();\n            } }\n            >\n              重置\n            </Button>\n          </Col>\n          <Col offset={ 2 }>\n            <Button type=\"primary\"\n              onClick={ modifyHandle }\n              loading={ submitLoading }\n            >\n              确定修改\n            </Button>\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default DataInputControl;\n","import React, { FC, useState } from 'react';\nimport { Select, Spin, Empty } from 'antd';\nimport { searchDramaContent } from './services';\n\nconst { Option } = Select;\n\nlet timeout;\n\nfunction fetch(value: string, callback: any) {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  function fake() {\n    searchDramaContent({ title: value, onlineStatus: '1' }).then((res: any) => {\n      const list = res?.data?.list || [];\n\n      callback(list);\n    });\n  }\n\n  timeout = setTimeout(fake, 300);\n}\n\ninterface Props {\n  value?: any;\n  onChange?: (time?: string) => void;\n  width?: number|string;\n}\n\nconst DramaContentSearch: FC<Props> = (props: any) => {\n  const { value, onChange, width } = props;\n  const [list, setlist] = useState<any[]>([]);\n\n  const handleSearch = (inputVal: string) => {\n    if (inputVal) {\n      fetch(inputVal, (resList: any[]) => setlist(resList));\n    } else {\n      setlist([]);\n    }\n  };\n\n  const handleChange = (inputVal: string) => {\n    const { value } = inputVal;\n    const { dramaId } = JSON.parse(value);\n\n    onChange({ ...inputVal, totalItem: value, value: dramaId });\n  };\n\n  return (\n    <Select showSearch={ true }\n      labelInValue={ true }\n      value={ value }\n      style={{ width: width || '100%' }}\n      placeholder=\"输入名称搜索（模糊搜索）\"\n      defaultActiveFirstOption={ true }\n      showArrow={ false }\n      filterOption={ false }\n      onSearch={ handleSearch }\n      onChange={ handleChange }\n      notFoundContent={ <Empty /> }\n    >\n      {list.map((d: any) => (<Option value={ JSON.stringify(d) } key={ d.dramaId }>{d.title}</Option>))}\n    </Select>\n  );\n};\n\nexport default DramaContentSearch;","import { Pagenation } from './../../types/types.d';\nimport request from '@/utils/request';\n\nimport { requestBasePath } from '@/services/login';\n\n\n// 获取搜索列表\nexport async function searchDramaContent(params: {title?: string; termTitle?: string; onlineStatus?: string; category?: string}) {\n  return await request(`${ requestBasePath }/wingvate/wind-vane-backend/drama/query/queryDramaContentList`, {\n    method: 'POST',\n    body: {\n      query: params,\n      sort: { type: 'desc', key: 'createTime' },\n      pagination: { pageSize: 100, current: 1 }\n    }\n  });\n}\n","import React, { FC, useCallback, useState, useRef } from 'react';\nimport { Link } from 'umi';\nimport style from './index.less';\nimport { Button } from 'antd';\n\ninterface Props{\n  title: string;\n  enterUrl?: string;\n}\n\nconst ChunkTitle = (props: Props) => {\n  const { title, enterUrl } = props;\n  \n  return (\n    <p className={ style.chunkTitle }>\n      <span className={ style.chunkTitleText }>{title}</span>\n      {enterUrl\n        ? (\n          <Link to={ enterUrl }>\n            <Button type=\"primary\" size=\"small\">进入</Button>\n          </Link>)\n        : ''}\n    </p>\n    \n  );\n};\n\nexport default ChunkTitle;\n","import request from '@/utils/request';\nimport { requestBasePath } from '@/services/login';\nimport { APP_ID } from '@/utils/constant.js';\n\ninterface AdjustGradeRequestParams {\n  grades: number[];\n  subjectId: string;\n  subjectType?: string;\n}\n\n// 获取指定作品评论增长趋势\nexport async function getGrowTrendList(requestBody: any) {\n  // return await request(\n  //   `${ requestBasePath }/wingvate/wind-vane-backend/statistics/comment/growth-trend/list`,\n  //   {\n  //     method: 'POST',\n  //     body: requestBody,\n  //   }\n  // );\n\n  const data = {\n    \"code\": 200,\n    \"level\": 200,\n    \"message\": \"success\",\n    \"description\": \"\",\n    \"data\": [{\n      \"time\": 2022070415,\n      \"count\": 1\n    }],\n    \"succeed\": true,\n    \"msg\": \"success\"\n  }\n\n  return data\n}\n\n// 获取指定作品评论增长趋势\nexport async function getPublicScoreTrendList(requestBody: any) {\n  return await request(\n    `${ requestBasePath }/wingvate/wind-vane-backend/statistics/public-score/trend/list`,\n    {\n      method: 'POST',\n      body: requestBody,\n    }\n  );\n}\n\n// 保存并启动刷分\nexport async function dealCommentReport(requstParams: any) {\n  return await request(`${ requestBasePath }/comment/saveAndStartAdjust`, {\n    method: 'POST',\n    body: requstParams,\n  });\n}\n\n// 保存并启动灌评论\nexport async function saveAndStartCommentAdjust(requstParams: any) {\n  return await request(`${ requestBasePath }/comment/saveAndStartCommentAdjust`, {\n    method: 'POST',\n    body: { ...requstParams, appId: APP_ID },\n  });\n}\n\n// 评分控制\nexport async function sampleAdjustGrade(\n  requstParams: AdjustGradeRequestParams, formValues\n) {\n  // const temp = await request(\n  //   `${ requestBasePath }/wind-vane-backend/drama/operate/public-score/init-value`,\n  //   {\n  //     method: 'POST',\n  //     body: formValues,\n  //   }\n  // );\n\n  return await request(`${ requestBasePath }/comment/sampleAdjustGrade`, {\n    method: 'POST',\n    body: requstParams,\n  });\n}\n","import useSWR from '@/hooks/useSWR';\nimport request from '@/utils/request';\nimport { requestBasePath } from '@/services/login';\n\n// /wind-vane-backend/drama/operate/createDramaContent\nimport { ProducionInfo } from './types';\n\n\n// 创建作品\nexport function createProduction(params: ProducionInfo) {\n  return request(`${ requestBasePath }/wingvate/wind-vane-backend/list/operate/createListContent`, {\n    method: 'POST',\n    body: {\n      ...params,\n    }\n  });\n}\n\n// 更新作品 /wind-vane-backend/drama/operate/updateDramaContent\nexport function updateProduction(params: ProducionInfo) {\n  return request(`${ requestBasePath }/wingvate/wind-vane-backend/list/operate/updateListContent`, {\n    method: 'POST',\n    body: {\n      content: {\n        ...params,\n      },\n      listId: params.productionId,\n      operator: params.operator,\n      uSource: '后台',\n    }\n  });\n}\n","import React, {\n  FC,\n  useCallback,\n  useState,\n  useRef,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { Link } from 'umi';\nimport {\n  Spin,\n  InputNumber,\n  Modal,\n  Input,\n  Space,\n  Avatar,\n  Button,\n  Radio,\n} from 'antd';\n// import {  } from './services';\nimport ChunkTitle from '@/components/chunkTitle';\nimport style from '../../../CommontManage/ExpertCommentDetail/index.less';\nimport { ProductionClassMaps } from '@/utils/constant.js';\nimport { PlusOutlined, ControlOutlined, RedoOutlined } from '@ant-design/icons';\nimport { useGetUserList } from '@/pages/UserManage/NormalUserList/services';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst { Search } = Input;\nconst { Group: RadioGroup } = Radio;\n\nconst PAGESIZE = 20;\nconst ROLE_TYPE = 'expert';\nconst initSearch = {\n  pagination: { pageSize: PAGESIZE, current: 1 },\n  query: { roleType: ROLE_TYPE, status: 1 },\n  sort: { type: 'desc', key: 'create_time' },\n};\n\nconst ExpertChoose = (props) => {\n  const { visible, setVisible, onChange } = props;\n  const [searchParams, setSearchParams] = useState(initSearch);\n  const [expertList, setExpertList] = useState([]);\n  const [scrollHasMore, setScrollHasMore] = useState(true);\n  const { userList, pagination, isValidating, mutate } = useGetUserList(\n    searchParams\n  );\n  const [selectData, setSelectData] = useState();\n\n  useEffect(() => {\n    if (userList?.length) {\n      setExpertList((preExpertList: any[]) => [...preExpertList, ...userList]);\n    }\n  }, [userList]);\n\n  const handleOk = () => {\n    setVisible(false);\n    onChange ? onChange(selectData) : null;\n  };\n  const handleCancel = () => {\n    setVisible(false);\n  };\n  const hadnleSearch = (value: string) => {\n    setExpertList([]);\n    setSearchParams((preParams: any) => {\n      const { query, pagination: page } = preParams;\n\n      return {\n        ...preParams,\n        query: {\n          ...query,\n          nickName: value,\n        },\n        pagination: {\n          current: 1,\n          pageSize: pagination?.pageSize,\n        },\n      };\n    });\n  };\n\n  // 上拉加载\n  const handleInfiniteOnLoad = () => {\n    const { query, pagination: page } = searchParams;\n\n    if (page?.current * pagination?.pageSize < pagination?.total) {\n      let pageNum = page?.current;\n\n      pageNum = pageNum + 1;\n      setSearchParams({\n        ...searchParams,\n        query,\n        pagination: {\n          current: pageNum,\n          pageSize: pagination?.pageSize,\n        },\n      });\n    } else {\n      setScrollHasMore(false);\n    }\n  };\n\n  const changeValue = (name) => {\n    return (e) => {\n      setSelectData({ id: e.target.value, name });\n    };\n  };\n\n  return (\n    <Modal title=\"请选择专家\"\n      visible={ visible }\n      onOk={ handleOk }\n      onCancel={ handleCancel }\n    >\n      <div style={{ marginBottom: '10px' }}>\n        专家选择：\n        <Button icon={ <RedoOutlined /> }\n          type=\"primary\"\n          shape=\"circle\"\n          style={{ marginLeft: '20px' }}\n          onClick={ () => {\n            hadnleSearch('');\n          } }\n        />\n      </div>\n      <div style={{ border: '1px solid #ccc', padding: '20px 10px' }}>\n        <Search style={{ marginBottom: '20px' }} onSearch={ hadnleSearch } />\n        <Spin spinning={ isValidating }>\n          <div style={{\n            height: '600px',\n            overflow: 'auto',\n            padding: '2px 20px 10px',\n          }}\n          >\n            <InfiniteScroll initialLoad={ false }\n              pageStart={ 1 }\n              threshold={ 50 }\n              loadMore={ handleInfiniteOnLoad }\n              hasMore={ !isValidating && scrollHasMore }\n              useWindow={ false }\n            >\n              <RadioGroup>\n                {expertList.map((item: any) => (\n                  <Radio className={ style.expertItemW }\n                    key={ item.userId }\n                    value={ item.userId }\n                    onChange={ changeValue(item.nickName) }\n                  >\n                    <div className={ style.expertItem }>\n                      <Avatar className={ style.expertItemAvatar }\n                        src={ item.userAvatar }\n                      />\n                      <span>{item.nickName}</span>\n                    </div>\n                  </Radio>\n                ))}\n              </RadioGroup>\n            </InfiniteScroll>\n          </div>\n        </Spin>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ExpertChoose;\n","import React, { useState, useCallback, useRef } from 'react';\nimport { Table } from 'antd';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst type = 'DraggableBodyRow';\n\nconst DraggableBodyRow = ({\n  index,\n  moveRow,\n  className,\n  style,\n  ...restProps\n}) => {\n  const ref = useRef();\n  const [{ isOver, dropClassName }, drop] = useDrop({\n    accept: type,\n    collect: (monitor) => {\n      const { index: dragIndex } = monitor.getItem() || {};\n\n      if (dragIndex === index) {\n        return {};\n      }\n\n      return {\n        isOver: monitor.isOver(),\n        dropClassName:\n          dragIndex < index ? ' drop-over-downward' : ' drop-over-upward',\n      };\n    },\n    drop: (item) => {\n      moveRow(item.index, index);\n    },\n  });\n  const [, drag] = useDrag({\n    type,\n    item: { index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drop(drag(ref));\n\n  return (\n    <tr\n      ref={ref}\n      className={`${className}${isOver ? dropClassName : ''}`}\n      style={{ cursor: 'move', ...style }}\n      {...restProps}\n    />\n  );\n};\n\n\n\nconst DragSortingTable = (props) => {\n  const { list, setList, deleteFn } = props;\n\n  const columns = [\n    {\n      title: '位置',\n      dataIndex: 'index',\n      key: 'index',\n      render: (text, record, index) => {\n          return <span>{index + 1}</span>\n      }\n    },\n    {\n      title: '作品名称',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      key: 'action',\n      render: (text, record, index) => {\n        return <CloseOutlined onClick={deleteFn(index)}/>;\n      },\n    },\n  ];\n\n  const components = {\n    body: {\n      row: DraggableBodyRow,\n    },\n  };\n\n  const moveRow = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragRow = list[dragIndex];\n\n      setList(\n        update(list, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragRow],\n          ],\n        })\n      );\n    },\n    [list]\n  );\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table\n        rowKey=\"dramaId\"\n        columns={columns}\n        dataSource={list}\n        components={components}\n        onRow={(record, index) => ({\n          index,\n          moveRow,\n        })}\n        pagination={false}\n      />\n    </DndProvider>\n  );\n};\n\nexport default DragSortingTable;\n","import React, {\n  FC,\n  useCallback,\n  useState,\n  useRef,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { Link, history } from 'umi';\nimport {\n  Form,\n  Row,\n  Col,\n  Popconfirm,\n  Tooltip,\n  Input,\n  Radio,\n  Button,\n  message,\n  Modal,\n  Table,\n} from 'antd';\nimport { Prompt } from 'react-router-dom';\nimport { Role, getAuthority } from '@/utils/authority';\nimport { withAuthorized } from '@/utils/Authorized';\nimport ChunkTitle from '@/components/chunkTitle';\nimport style from './index.less';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport classnames from 'classnames';\nimport { createProduction, updateProduction } from './services';\nimport moment, { Moment } from 'moment';\nimport UploadFile from '@/components/UploadFile';\nimport { Online, Outline } from '@/components/miniComponents';\nimport ExpertChoose from './components/ExpertChoose';\nimport { useUserRole } from '@/services/login';\nimport { FilmTypeOptionsMaps, FilmTypeOptions, FilmStatus } from '@/utils/constant';\nimport DramaContentSearch from '@/components/DramaContentSearch';\nimport DragSortingTable from './components/DragTable';\nimport DataTempleteUpload from '@/components/DataTempleteUpload';\nimport { getProductionList } from '@/services/publicServices';\n\nconst sizeOptions = [\n  {\n    width: 300,\n    height: 300,\n    text: '片单图片',\n  },\n];\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nconst { TextArea } = Input;\n\nconst authority = getAuthority();\nconst isSystem = authority.indexOf(Role.SYSTEM) >= 0;\n\nconst ProductionDataForm = (props: any) => {\n  const [form] = Form.useForm();\n  const [preData, setPreData] = useState();\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [expertData, setExpertData] = useState({\n    userName: '',\n    cUserId: '',\n    operator: '',\n  });\n  const { data } = useUserRole();\n\n  const leaveLockRef = useRef(true);\n  const [leaveConfirm, setLeaveConfirm] = useState(false);\n\n  const [show, setShow] = useState(false);\n\n  const [list, setList] = useState([]);\n\n  const [productionDetail, setProductionDetail] = useState({});\n\n  const productionId = useMemo(() => {\n    return props?.location?.query?.dramaId;\n  }, [props]);\n\n  const getData = async () => {\n    const res = await getProductionList(productionId);\n\n\n    if (res.code == 200) {\n      const detail = res.data;\n      const { dramas = [], nickName = '', creatorId = '', operator } = detail;\n\n      setList(dramas || []);\n      setProductionDetail(detail);\n      setExpertData({ userName: nickName, cUserId: creatorId, operator });\n    }\n  };\n\n  useEffect(() => {\n    if (productionId) {\n      getData();\n    }\n  }, [props]);\n\n  const isOnLine = useMemo(() => {\n    const des = FilmStatus[productionDetail?.onlineStatus] || '';\n\n    return des.indexOf('上线') > -1;\n  }, [productionDetail]);\n\n\n  const cancleEdit = () => {\n    history.push('/content-manage/filmList-manage');\n  };\n\n  const handleSetFormDataInit = () => {\n    let {\n      title,\n      coverImageUrl,\n      description,\n      category,\n      platform,\n      showTime: showTimeData,\n      topDeadline,\n      finishTime,\n      type = '1',\n      dramas = [],\n      creatorId,\n    } = productionDetail;\n    const imgList = coverImageUrl ? [coverImageUrl] : [];\n    let value, label;\n\n    if (dramas && dramas.length > 0) {\n      value = dramas[0].dramaId;\n      label = dramas[0].title;\n    } else {\n      dramas = []\n    }\n\n\n    form.setFieldsValue({\n      title,\n      coverImage: imgList?.length\n        ? [\n          {\n            uid: new Date().getTime(),\n            name: new Date().getTime(),\n            status: 'done',\n            url: imgList[0],\n          },\n        ]\n        : [],\n      description,\n      category,\n      platform: platform ? JSON.parse(platform) : [],\n      showTime: showTimeData && moment(showTimeData),\n      topDeadline: topDeadline && moment(topDeadline),\n      finishTime: finishTime && moment(finishTime),\n      type: type + '',\n      dataList: { value, label },\n      zhanghao: { id: creatorId },\n    });\n    setPreData(productionDetail);\n  };\n\n  useEffect(() => {\n    if (productionDetail?.listId) {\n      handleSetFormDataInit();\n    }\n  }, [productionDetail?.listId]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      // 15秒之后, 离开页面需要二次确认\n      setLeaveConfirm(true);\n    }, 15000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  const handlePre = useCallback(() => {\n    const { validateFields } = form;\n\n    validateFields()\n      .then((values: any) => {\n        const preDatas = { ...values };\n\n        preDatas.coverImage = values?.coverImage?.length\n          ? JSON.stringify([values?.coverImage[0]?.url])\n          : JSON.stringify([]);\n        setPreData(preDatas);\n      })\n      .catch((errorInfo: any) => {\n        console.log('formError', errorInfo);\n      });\n  }, [form]);\n\n  const handlePublish = useCallback(() => {\n    const { validateFields } = form;\n\n    validateFields()\n      .then(async (values: any) => {\n        console.log(values);\n\n        const {\n          title,\n          coverImage,\n          description,\n          dataList,\n          zhanghao: { id },\n          type,\n        } = values;\n\n        const params = {\n          creatorId: id,\n          visibility: 1,\n          coverImageUrl: coverImage?.length ? coverImage[0]?.url : '',\n          onlineStatus: 2,\n          dataList: list.map((item, index) => {\n            return { dramaId: item.dramaId, position: index + 1 };\n          }),\n          description,\n          title,\n          type: parseInt(type),\n          defaultFlag: 0,\n        };\n\n        console.log('params', params);\n        setBtnLoading(true);\n\n        try {\n          let res: any = {};\n\n          if (productionId) {\n            res = await updateProduction({\n              ...productionDetail,\n              ...params,\n              productionId,\n            });\n            // 下线作品 重新上线\n            // if (!isOnLine && res?.code === 200) {\n            //   res = await productionOnOrOutLine({\n            //     dramaId: productionId,\n            //     onlineStatus: 1,\n            //   });\n            // }\n          } else {\n            res = await createProduction({ ...params });\n          }\n\n          if (res?.code === 200) {\n            setLeaveConfirm(false);\n            message.success('操作成功！');\n            cancleEdit();\n          } else {\n            message.error(res?.message || '服务器出问题啦');\n          }\n        } catch (error) {\n          message.error(error?.message);\n        } finally {\n          setBtnLoading(false);\n        }\n      })\n      .catch((errorInfo: any) => {\n        console.log('formError', errorInfo);\n      });\n  }, [form, productionId, isOnLine, productionDetail, list]);\n\n  const showExpertChoose = () => {\n    setShow(true);\n  };\n\n  const changeExpert = (value) => {\n    const { id, name } = value;\n\n    setExpertData({\n      userName: name,\n      cUserId: id,\n      operator: data?.data?.displayName || '',\n    });\n  };\n\n  const handleChangeSearch = (value) => {\n    let { totalItem } = value;\n\n    totalItem = JSON.parse(totalItem);\n    // 作品不能重复添加\n    setList((pre) => {\n      if (pre.find((item) => item.dramaId === totalItem.dramaId)) {\n        message.info('该作品已存在片单中');\n        return [...pre];\n      } else {\n        return [...pre, { ...totalItem }];\n      }\n    });\n  };\n\n  const deleteFn = (index) => {\n    return () => {\n      const listNew = [...list];\n\n      listNew.splice(index, 1);\n      setList(listNew);\n    };\n  };\n\n  const handleSuccess = () => {\n    // 灌评成功\n  };\n\n  return (\n    <div className={ style.productionDataFormWrap }>\n      <Prompt when={ leaveConfirm }\n        message={ (location: any) => {\n          if (!leaveLockRef.current) {\n            return true;\n          }\n\n          Modal.confirm({\n            title: '即将离开页面',\n            content: '正在编辑作品, 确认离开吗',\n            onOk: () => {\n              leaveLockRef.current = false;\n              history.push(location.pathname);\n            },\n            onCancel: () => {\n              leaveLockRef.current = true;\n            },\n          });\n\n          return !leaveLockRef.current;\n        } }\n      />\n      <Row>\n        <Col span={ 12 } className={ style.productionDataFormChunk }>\n          <Form { ...layout } form={ form } initialValues={{ type: '1' }}>\n            <ChunkTitle title=\"片单资料管理\" />\n            <div className={ style.productionDetail }>\n              <Form.Item label=\"片单名称\"\n                name=\"title\"\n                rules={ [{ required: true, message: '请输入名称!' }] }\n              >\n                <Input style={{ width: '80%' }} placeholder=\"片单名称，最长18个字\" maxLength={ 18 } />\n              </Form.Item>\n              <Form.Item label=\"片单简介\" name=\"description\">\n                <TextArea rows={ 4 }\n                  placeholder=\"最长30个字哦！\"\n                  maxLength={ 30 }\n                />\n              </Form.Item>\n              {productionId ? (\n                isOnLine ? (\n                  <p className={ style.productionStatus }>\n                    <Online />\n                  </p>\n                ) : (\n                  <div className={ style.productionStatus }>\n                    <Tooltip placement=\"topRight\"\n                      title={\n                        <p style={{ width: 240 }}>\n                          下线作品点击发布后可重新在前台展示\n                        </p>\n                      }\n                    >\n                      <Outline />\n                      <ExclamationCircleOutlined className={ style.productionIcon }\n                      />\n                    </Tooltip>\n                  </div>\n                )\n              ) : null}\n            </div>\n            <Form.Item label=\"片单图片\"\n              name=\"coverImage\"\n              valuePropName=\"fileList\"\n            >\n              <UploadFile sizeOptions={ sizeOptions }\n                isSingle={ true }\n                listType=\"picture-card\"\n              />\n            </Form.Item>\n            <Form.Item label=\"发布账号\"\n              rules={ [{ required: true, message: '请选择专家账号!' }] }\n            >\n              <div>\n                <span>{expertData.userName}</span>{' '}\n                <a onClick={ showExpertChoose }>点击选择发布账号</a>\n              </div>\n              <Form.Item name=\"zhanghao\"\n                noStyle={ true }\n                rules={ [{ required: true, message: '请选择账号!' }] }\n              >\n                <ExpertChoose visible={ show }\n                  setVisible={ setShow }\n                  onChange={ changeExpert }\n                />\n              </Form.Item>\n            </Form.Item>\n            <Form.Item label=\"片单类型\" name=\"type\">\n              <Radio.Group options={ FilmTypeOptionsMaps } optionType=\"button\" disabled/>\n            </Form.Item>\n            <Form.Item label=\"选择作品\"\n              name=\"dataList\"\n              rules={ [{ required: true, message: '请选择作品!' }] }\n            >\n              <DramaContentSearch onChange={ handleChangeSearch }\n                style={{ width: 200 }}\n              />\n            </Form.Item>\n            <DragSortingTable list={ list }\n              setList={ setList }\n              deleteFn={ deleteFn }\n            >\n            </DragSortingTable>\n\n            {!productionDetail.type\n            || (FilmTypeOptions[productionDetail.type]\n              && FilmTypeOptions[productionDetail.type].indexOf('用户')) ? (\n                <div className={ style.btnList }>\n                  {/* <Button className={ classnames([style.btn, style.greenBtn]) }\n                onClick={ handlePre }\n              >\n                {productionId ? '更新预览' : '预览'}\n              </Button> */}\n                  <Button className={ style.btn } onClick={ cancleEdit }>\n                    取消\n                  </Button>\n                  <Popconfirm placement=\"topRight\"\n                    title=\"确认发布该片单吗\"\n                    onConfirm={ handlePublish }\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                  >\n                    <Button loading={ btnLoading }\n                      className={ style.btn }\n                      type=\"primary\"\n                    >\n                      {productionId && !isOnLine ? '重新上线' : '发布'}\n                    </Button>\n                  </Popconfirm>\n                </div>\n              ) : null}\n          </Form>\n        </Col>\n\n        <Col span={ 12 }\n          className={ classnames([\n            style.productionDataFormChunk,\n            style.commontChunkWrap,\n          ]) }\n        >\n          <div className={ style.commontChunk }>\n            <ChunkTitle title=\"片单灌评\" />\n            <DataTempleteUpload dramaId={ productionId }\n              subjectType=\"listContent\"\n              successHandle={ handleSuccess }\n              noAction={ !productionId }\n            />\n          </div>\n        </Col>\n        {/* <Col span={ 12 }\n            className={ classnames([\n              style.productionDataFormChunk,\n              style.commontChunkWrap,\n            ]) }\n          >\n            <div className={ style.commontChunk }>\n              <ChunkTitle title=\"效果预览\" />\n              <ProductionDetail production={ preData }\n                imgSpan={ 8 }\n                detailSpan={ 16 }\n              />\n            </div>\n            {productionId && isSystem ? (\n              <div className={ style.commontChunk }>\n                <p className={ style.commontItem }>\n                  <Link to={ `/commont-manage/public-comment-manage?dramaId=${ productionId }` }\n                  >\n                    大众评论管理\n                  </Link>\n                </p>\n                <p className={ style.commontItem }>\n                  <Link to={ `/commont-manage/expert-comment-manage?dramaId=${ productionId }` }\n                  >\n                    专业评论管理\n                  </Link>\n                </p>\n                <p className={ style.commontItem }>\n                  <Link to={ `/data-manage/data-control?dramaId=${ productionId }` }\n                  >\n                    数据调控\n                  </Link>\n                </p>\n              </div>\n            ) : null}\n          </Col> */}\n      </Row>\n    </div>\n  );\n};\n\nexport default withAuthorized(ProductionDataForm, [Role.SYSTEM, Role.WORKS]);\n","module.exports = __webpack_public_path__ + \"static/templete.92e9a642.png\";"],"sourceRoot":""}