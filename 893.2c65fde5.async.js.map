{"version":3,"sources":["webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://windvane/./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://windvane/./node_modules/swr/esm/libs/is-document-visible.js","webpack://windvane/./node_modules/swr/esm/libs/is-online.js","webpack://windvane/./node_modules/swr/esm/config.js","webpack://windvane/./node_modules/swr/esm/libs/hash.js","webpack://windvane/./node_modules/swr/esm/libs/throttle.js","webpack://windvane/./node_modules/swr/esm/swr-config-context.js","webpack://windvane/./node_modules/swr/esm/use-swr.js","webpack://windvane/./node_modules/swr/esm/use-swr-pages.js","webpack://windvane/./node_modules/swr/esm/index.js","webpack://windvane/./node_modules/swr/node_modules/fast-deep-equal/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","module","exports","_arrayWithoutHoles","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","_nonIterableSpread","TypeError","unsupportedIterableToArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_arrayWithHoles","_iterableToArrayLimit","_arr","_n","_d","_e","_s","_i","next","push","_nonIterableRest","isDocumentVisible","document","visibilityState","isOnline","navigator","onLine","__cache","Map","cacheGet","get","cacheSet","set","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","slowConnection","window","indexOf","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","deepEqual","eventsBinded","addEventListener","table","WeakMap","counter","hash","_hash","String","has","throttle","interval","pending","SWRConfigContext","createContext","displayName","IS_SERVER","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","getErrorKey","getKeyArgs","NO_DEDUPE","trigger","_key","shouldRevalidate","updaters","currentData","currentError","broadcastState","data","mutate","_data","Date","now","useSWR","fnArgs","keyErr","assign","useContext","fetcher","initialData","initialError","stateDependencies","useRef","isValidating","stateRef","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","k","current","unmountedRef","keyRef","boundMutate","revalidateOpts","dedupe","loading","shouldDeduping","startAt","newData","newState","currentHookData","latestKeyedData","onFocus","softRevalidate","onUpdate","updatedData","updatedError","needUpdate","reconnect","revalidators","index","pop","removeEventListener","timer","tick","clearTimeout","Error","latestData","latestError","useMemo","state","defineProperties","SWRConfig","keyList","keys","hasProp","hasOwnProperty","equal","a","b","arrA","arrB","dateA","dateB","getTime","regexpA","RegExp","regexpB"],"mappings":"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","file":"893.2c65fde5.async.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function isDocumentVisible() {\n    if (typeof document !== 'undefined' &&\n        typeof document.visibilityState !== 'undefined') {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n}\n","export default function isOnline() {\n    if (typeof navigator.onLine !== 'undefined') {\n        return navigator.onLine;\n    }\n    // always assume it's online\n    return true;\n}\n","import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\n// Cache\nconst __cache = new Map();\nfunction cacheGet(key) {\n    return __cache.get(key);\n}\nfunction cacheSet(key, value) {\n    return __cache.set(key, value);\n}\nfunction cacheClear() {\n    __cache.clear();\n}\n// state managers\nconst CONCURRENT_PROMISES = {};\nconst CONCURRENT_PROMISES_TS = {};\nconst FOCUS_REVALIDATORS = {};\nconst CACHE_REVALIDATORS = {};\nconst MUTATION_TS = {};\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (config.errorRetryCount && opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    const count = Math.min(opts.retryCount || 0, 8);\n    const timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nconst slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nconst defaultConfig = {\n    // events\n    onLoadingSlow: () => { },\n    onSuccess: () => { },\n    onError: () => { },\n    onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: deepEqual\n};\n// Focus revalidate\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n    const revalidate = () => {\n        if (!isDocumentVisible() || !isOnline())\n            return;\n        for (let key in FOCUS_REVALIDATORS) {\n            if (FOCUS_REVALIDATORS[key][0])\n                FOCUS_REVALIDATORS[key][0]();\n        }\n    };\n    window.addEventListener('visibilitychange', revalidate, false);\n    window.addEventListener('focus', revalidate, false);\n    // only bind the events once\n    eventsBinded = true;\n}\nexport { CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, CACHE_REVALIDATORS, MUTATION_TS, cacheGet, cacheSet, cacheClear };\nexport default defaultConfig;\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    let key = 'arg';\n    for (let i = 0; i < args.length; ++i) {\n        let _hash;\n        if (args[i] === null || typeof args[i] !== 'object') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // null        -> 'null'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","export default function throttle(fn, interval) {\n    let pending = false;\n    return (...args) => {\n        if (pending)\n            return;\n        pending = true;\n        fn(...args);\n        setTimeout(() => (pending = false), interval);\n    };\n}\n","import { createContext } from 'react';\nconst SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","import { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { cacheGet, cacheSet, CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS } from './config';\nimport hash from './libs/hash';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nconst IS_SERVER = typeof window === 'undefined';\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// TODO: introduce namepsace for the cache\nconst getErrorKey = key => (key ? 'err@' + key : '');\nconst getKeyArgs = key => {\n    let args = null;\n    if (typeof key === 'function') {\n        try {\n            key = key();\n        }\n        catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    if (Array.isArray(key)) {\n        // args array\n        args = key;\n        key = hash(key);\n    }\n    else {\n        // convert null to ''\n        key = String(key || '');\n    }\n    return [key, args];\n};\nconst NO_DEDUPE = false;\nconst trigger = (_key, shouldRevalidate = true) => {\n    const [key] = getKeyArgs(_key);\n    if (!key)\n        return;\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        const currentData = cacheGet(key);\n        const currentError = cacheGet(getErrorKey(key));\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](shouldRevalidate, currentData, currentError, NO_DEDUPE);\n        }\n    }\n};\nconst broadcastState = (key, data, error) => {\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error);\n        }\n    }\n};\nconst mutate = async (_key, _data, shouldRevalidate = true) => {\n    const [key] = getKeyArgs(_key);\n    if (!key)\n        return;\n    // if there is no new data, call revalidate against the key\n    if (typeof _data === 'undefined')\n        return trigger(_key, shouldRevalidate);\n    // update timestamp\n    MUTATION_TS[key] = Date.now() - 1;\n    let data, error;\n    if (_data && typeof _data === 'function') {\n        // `_data` is a function, call it passing current cache value\n        try {\n            data = await _data(cacheGet(key));\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else if (_data && typeof _data.then === 'function') {\n        // `_data` is a promise\n        try {\n            data = await _data;\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else {\n        data = _data;\n    }\n    if (typeof data !== 'undefined') {\n        // update cached data\n        cacheSet(key, data);\n    }\n    // update existing SWR Hooks' state\n    const updaters = CACHE_REVALIDATORS[key];\n    if (updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](!!shouldRevalidate, data, error, NO_DEDUPE);\n        }\n    }\n    // throw error or return data to be used by caller of mutate\n    if (error)\n        throw error;\n    return data;\n};\nfunction useSWR(...args) {\n    let _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    const [key, fnArgs] = getKeyArgs(_key);\n    // `keyErr` is the cache key for error objects\n    const keyErr = getErrorKey(key);\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    if (typeof fn === 'undefined') {\n        // use a global fetcher\n        fn = config.fetcher;\n    }\n    const initialData = cacheGet(key) || config.initialData;\n    const initialError = cacheGet(keyErr);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    const stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    const stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: false\n    });\n    const rerender = useState(null)[1];\n    let dispatch = useCallback(payload => {\n        let shouldUpdateState = false;\n        for (let k in payload) {\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    const unmountedRef = useRef(false);\n    const keyRef = useRef(key);\n    const boundMutate = useCallback((data, shouldRevalidate) => {\n        return mutate(key, data, shouldRevalidate);\n    }, [key]);\n    // start a revalidation\n    const revalidate = useCallback(async (revalidateOpts = {}) => {\n        if (!key || !fn)\n            return false;\n        if (unmountedRef.current)\n            return false;\n        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n        let loading = true;\n        let shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n        // start fetching\n        try {\n            dispatch({\n                isValidating: true\n            });\n            let newData;\n            let startAt;\n            if (shouldDeduping) {\n                // there's already an ongoing request,\n                // this one needs to be deduplicated.\n                startAt = CONCURRENT_PROMISES_TS[key];\n                newData = await CONCURRENT_PROMISES[key];\n            }\n            else {\n                // if not deduping the request (hard revalidate) but\n                // there're other ongoing request(s) at the same time,\n                // we need to ignore the other result(s) to avoid\n                // possible race conditions:\n                // req1------------------>res1\n                //      req2-------->res2\n                // in that case, the second response should not be overridden\n                // by the first one.\n                if (CONCURRENT_PROMISES[key]) {\n                    // we can mark it as a mutation to ignore\n                    // all requests which are fired before this one\n                    MUTATION_TS[key] = Date.now() - 1;\n                }\n                // if no cache being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && !cacheGet(key)) {\n                    setTimeout(() => {\n                        if (loading)\n                            config.onLoadingSlow(key, config);\n                    }, config.loadingTimeout);\n                }\n                if (fnArgs !== null) {\n                    CONCURRENT_PROMISES[key] = fn(...fnArgs);\n                }\n                else {\n                    CONCURRENT_PROMISES[key] = fn(key);\n                }\n                CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                newData = await CONCURRENT_PROMISES[key];\n                setTimeout(() => {\n                    delete CONCURRENT_PROMISES[key];\n                    delete CONCURRENT_PROMISES_TS[key];\n                }, config.dedupingInterval);\n                // trigger the success event,\n                // only do this for the original request.\n                config.onSuccess(newData, key, config);\n            }\n            // if the revalidation happened earlier than the local mutation,\n            // we have to ignore the result because it could override.\n            // meanwhile, a new revalidation should be triggered by the mutation.\n            if (MUTATION_TS[key] && startAt <= MUTATION_TS[key]) {\n                dispatch({ isValidating: false });\n                return false;\n            }\n            cacheSet(key, newData);\n            cacheSet(keyErr, undefined);\n            keyRef.current = key;\n            // new state for the reducer\n            const newState = {\n                isValidating: false\n            };\n            if (typeof stateRef.current.error !== 'undefined') {\n                // we don't have an error\n                newState.error = undefined;\n            }\n            if (config.compare(stateRef.current.data, newData)) {\n                // deep compare to avoid extra re-render\n                // do nothing\n            }\n            else {\n                // data changed\n                newState.data = newData;\n            }\n            // merge the new state\n            dispatch(newState);\n            if (!shouldDeduping) {\n                // also update other hooks\n                broadcastState(key, newData, undefined);\n            }\n        }\n        catch (err) {\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cacheSet(keyErr, err);\n            keyRef.current = key;\n            // get a new error\n            // don't use deep equal for errors\n            if (stateRef.current.error !== err) {\n                // we keep the stale data\n                dispatch({\n                    isValidating: false,\n                    error: err\n                });\n                if (!shouldDeduping) {\n                    // also broadcast to update other hooks\n                    broadcastState(key, undefined, err);\n                }\n            }\n            // events and retry\n            config.onError(err, key, config);\n            if (config.shouldRetryOnError) {\n                // when retrying, we always enable deduping\n                const retryCount = (revalidateOpts.retryCount || 0) + 1;\n                config.onErrorRetry(err, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount }));\n            }\n        }\n        loading = false;\n        return true;\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(() => {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        const currentHookData = stateRef.current.data;\n        const latestKeyedData = cacheGet(key) || config.initialData;\n        // update the state if the key changed or cache updated\n        if (keyRef.current !== key ||\n            !config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n            keyRef.current = key;\n        }\n        // revalidate with deduping\n        const softRevalidate = () => revalidate({ dedupe: true });\n        // trigger a revalidation\n        if (!config.initialData) {\n            if (typeof latestKeyedData !== 'undefined' &&\n                !IS_SERVER &&\n                window['requestIdleCallback']) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                window['requestIdleCallback'](softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        // whenever the window gets focused, revalidate\n        let onFocus;\n        if (config.revalidateOnFocus) {\n            // throttle: avoid being called twice from both listeners\n            // and tabs being switched quickly\n            onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n            if (!FOCUS_REVALIDATORS[key]) {\n                FOCUS_REVALIDATORS[key] = [onFocus];\n            }\n            else {\n                FOCUS_REVALIDATORS[key].push(onFocus);\n            }\n        }\n        // register global cache update listener\n        const onUpdate = (shouldRevalidate = true, updatedData, updatedError, dedupe = true) => {\n            // update hook state\n            const newState = {};\n            let needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            keyRef.current = key;\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        // add updater to listeners\n        if (!CACHE_REVALIDATORS[key]) {\n            CACHE_REVALIDATORS[key] = [onUpdate];\n        }\n        else {\n            CACHE_REVALIDATORS[key].push(onUpdate);\n        }\n        // set up reconnecting when the browser regains network connection\n        let reconnect = null;\n        if (typeof addEventListener !== 'undefined' &&\n            config.revalidateOnReconnect) {\n            reconnect = addEventListener('online', softRevalidate);\n        }\n        return () => {\n            // cleanup\n            dispatch = () => null;\n            // mark it as unmounted\n            unmountedRef.current = true;\n            if (onFocus && FOCUS_REVALIDATORS[key]) {\n                const revalidators = FOCUS_REVALIDATORS[key];\n                const index = revalidators.indexOf(onFocus);\n                if (index >= 0) {\n                    // 10x faster than splice\n                    // https://jsperf.com/array-remove-by-index\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (CACHE_REVALIDATORS[key]) {\n                const revalidators = CACHE_REVALIDATORS[key];\n                const index = revalidators.indexOf(onUpdate);\n                if (index >= 0) {\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (typeof removeEventListener !== 'undefined' && reconnect !== null) {\n                removeEventListener('online', reconnect);\n            }\n        };\n    }, [key, revalidate]);\n    // set up polling\n    useIsomorphicLayoutEffect(() => {\n        let timer = null;\n        const tick = async () => {\n            if (!stateRef.current.error &&\n                (config.refreshWhenHidden || isDocumentVisible()) &&\n                (!config.refreshWhenOffline && isOnline())) {\n                // only revalidate when the page is visible\n                // if API request errored, we stop polling in this round\n                // and let the error retry function handle it\n                await revalidate({ dedupe: true });\n            }\n            if (config.refreshInterval) {\n                timer = setTimeout(tick, config.refreshInterval);\n            }\n        };\n        if (config.refreshInterval) {\n            timer = setTimeout(tick, config.refreshInterval);\n        }\n        return () => {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    if (config.suspense) {\n        if (IS_SERVER)\n            throw new Error('Suspense on server side is not yet supported!');\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        let latestData = cacheGet(key);\n        let latestError = cacheGet(keyErr);\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    return useMemo(() => {\n        const state = { revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                }\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                }\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                }\n            }\n        });\n        return state;\n    }, [revalidate]);\n}\nconst SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","import React, { useCallback, useMemo, useState, useRef } from 'react';\nimport { cacheGet, cacheSet } from './config';\n/*\nThe idea\n\nA \"Page\" component renders the content of 1 API request, it accepts an offset (in this example it's from),\nuses a SWR hook (useSWR(API + '?limit=' + limit + '&from=' + from)) and returns items (Projects).\n\nThe UI:\n      +------------------------------------------+\n      |   Projects                               |\n+------------------------------------------------------+\n|     |   +----------------+                     |     |\n|     |                                          |     |\n|     |   +------------+                         |     |\n|     |                                          |     +--> 1 Page\n|     |   +-----------------+                    |     |\n|     |                                          |     |  /projects/list?limit=4\n|     |   +---------+                            |     |\n+------------------------------------------------------+\n      |                                          |\n      |   +------------+                         |     +  /projects/list?limit=4&from=123\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |   +---------+                            |     |\n      |                                          |     |\n      |   +--------------+                       |     +\n      |                                          |\n      |   +-------------------+                  |     +  /projects/list?limit=4&from=456\n      |                                          |     |\n      |   +------------+                         |     |\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |                                          |     +\n\nThe API\n// (inside `render`)\n\nfunction App () {\n  const {\n    pages,    // an array of each page component\n    pageSWRs, // an array of SWRs of each page\n    isLoadingMore,\n    isReachingEnd,\n    isEmpty,\n    loadMore\n  } = useSWRPages(\n    'project-page', // key of this page\n\n    // ======== the actual Page component!\n    ({ offset, withSWR }) => {\n      // required: use `withSWR` to wrap your main SWR (source of your pagination API)\n      const { data } = withSWR(\n        useSWR(API + '?limit=10&from=' + offset) // request projects with offset\n      )\n      if (!data) return <Placeholder>\n      return data.projects.map(project => <Card project={project} team={team}>)\n    },\n    // ========\n\n    // a function accepts a SWR's `data`, and returns the offset of the next page (or null)\n    data => data && data.length >= 10 ? data[data.length - 1].createdAt : null,\n\n    // (optional) outside deps of your Page component. in this case it's empty\n    []\n  )\n\n  // ...\n\n  if (isEmpty) return <EmptyProjectsPage/>\n\n  return <div>\n    {pages}\n    {isReachingEnd\n      ? null\n      : <button loading={isLoadingMore} onClick={loadMore}>Load More</button>}\n  </div>\n}\n*/\nconst pageCacheMap = new Map();\nexport function useSWRPages(pageKey, pageFn, SWRToOffset, deps = []) {\n    const pageCountKey = `_swr_page_count_` + pageKey;\n    const pageOffsetKey = `_swr_page_offset_` + pageKey;\n    const [pageCount, setPageCount] = useState(cacheGet(pageCountKey) || 1);\n    const [pageOffsets, setPageOffsets] = useState(cacheGet(pageOffsetKey) || [null]);\n    const [pageSWRs, setPageSWRs] = useState([]);\n    const pageFnRef = useRef(pageFn);\n    const emptyPageRef = useRef(false);\n    // Page component (wraps `pageFn`)\n    // for performance reason we need to memorize it\n    const Page = useCallback(props => {\n        // render the page component\n        const dataList = pageFnRef.current(props);\n        // if dataList is [], we can assume this page is empty\n        // TODO: this API is not stable\n        if (dataList && !dataList.length) {\n            emptyPageRef.current = true;\n        }\n        else {\n            emptyPageRef.current = false;\n        }\n        return dataList;\n    }, []);\n    // Doesn't have a next page\n    const isReachingEnd = pageOffsets[pageCount] === null;\n    const isLoadingMore = pageCount === pageOffsets.length;\n    const isEmpty = isReachingEnd && pageCount === 1 && emptyPageRef.current;\n    const loadMore = useCallback(() => {\n        if (isLoadingMore || isReachingEnd)\n            return;\n        setPageCount(c => {\n            cacheSet(pageCountKey, c + 1);\n            return c + 1;\n        });\n    }, [isLoadingMore || isReachingEnd]);\n    const _pageFn = useCallback(pageFn, deps);\n    pageFnRef.current = _pageFn;\n    const pages = useMemo(() => {\n        const getWithSWR = id => swr => {\n            if (!pageSWRs[id] ||\n                pageSWRs[id].data !== swr.data ||\n                pageSWRs[id].error !== swr.error ||\n                pageSWRs[id].revalidate !== swr.revalidate) {\n                setPageSWRs(swrs => {\n                    const _swrs = [...swrs];\n                    _swrs[id] = {\n                        data: swr.data,\n                        error: swr.error,\n                        revalidate: swr.revalidate,\n                        isValidating: swr.isValidating,\n                        mutate: swr.mutate\n                    };\n                    return _swrs;\n                });\n                if (typeof swr.data !== 'undefined') {\n                    // set next page's offset\n                    const newPageOffset = SWRToOffset(swr, id);\n                    if (pageOffsets[id + 1] !== newPageOffset) {\n                        setPageOffsets(arr => {\n                            const _arr = [...arr];\n                            _arr[id + 1] = newPageOffset;\n                            cacheSet(pageOffsetKey, _arr);\n                            return _arr;\n                        });\n                    }\n                }\n            }\n            return swr;\n        };\n        // render each page\n        const p = [];\n        if (!pageCacheMap.has(pageKey)) {\n            pageCacheMap.set(pageKey, []);\n        }\n        const pageCache = pageCacheMap.get(pageKey);\n        for (let i = 0; i < pageCount; ++i) {\n            if (!pageCache[i] ||\n                pageCache[i].offset !== pageOffsets[i] ||\n                pageCache[i].pageFn !== _pageFn) {\n                // when props change or at init\n                // render the page and cache it\n                pageCache[i] = {\n                    component: (React.createElement(Page, { key: `page-${pageOffsets[i]}-${i}`, offset: pageOffsets[i], withSWR: getWithSWR(i) })),\n                    pageFn: _pageFn,\n                    offset: pageOffsets[i]\n                };\n            }\n            p.push(pageCache[i].component);\n        }\n        return p;\n    }, [_pageFn, pageCount, pageSWRs, pageOffsets, pageKey]);\n    return {\n        pages,\n        pageCount,\n        pageSWRs,\n        isLoadingMore,\n        isReachingEnd,\n        isEmpty,\n        loadMore\n    };\n}\n","export * from './use-swr';\nimport { default as useSWR } from './use-swr';\nexport { useSWRPages } from './use-swr-pages';\nexport default useSWR;\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}